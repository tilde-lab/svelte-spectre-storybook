import{S as nt,i as st,s as at,T as et,a as P,e as W,c as B,b as _,V as ot,W as lt,X as pt,f as H,g as kt,t as C,d as _t,h as r,a0 as X,a1 as F,k as $,q as w,w as Y,l as h,m as v,r as E,x as z,n as ct,L as m,y as A,a2 as G,z as D,Q as mt,_ as J,u as dt}from"../../../../../chunks/index-3764ed31.js";import{a as U}from"../../../../../chunks/index-4d5523d7.js";/* empty css                                                                  */import{B as it}from"../../../../../chunks/Button-e41cee5a.js";import{K as $t}from"../../../../../chunks/knobs-2921691a.js";const ht=c=>({}),Z=c=>({});function x(c){let t;const a=c[2].default,n=et(a,c,c[1],null);return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,o){n&&n.m(s,o),t=!0},p(s,o){n&&n.p&&(!t||o&2)&&ot(n,a,s,s[1],t?pt(a,s[1],o,null):lt(s[1]),null)},i(s){t||(H(n,s),t=!0)},o(s){C(n,s),t=!1},d(s){n&&n.d(s)}}}function bt(c){let t,a,n;const s=c[2].toggler,o=et(s,c,c[1],Z);let l=c[0]&&x(c);return{c(){o&&o.c(),t=P(),l&&l.c(),a=W()},l(p){o&&o.l(p),t=B(p),l&&l.l(p),a=W()},m(p,i){o&&o.m(p,i),_(p,t,i),l&&l.m(p,i),_(p,a,i),n=!0},p(p,[i]){o&&o.p&&(!n||i&2)&&ot(o,s,p,p[1],n?pt(s,p[1],i,ht):lt(p[1]),Z),p[0]?l?(l.p(p,i),i&1&&H(l,1)):(l=x(p),l.c(),H(l,1),l.m(a.parentNode,a)):l&&(kt(),C(l,1,1,()=>{l=null}),_t())},i(p){n||(H(o,p),H(l),n=!0)},o(p){C(o,p),C(l),n=!1},d(p){o&&o.d(p),p&&r(t),l&&l.d(p),p&&r(a)}}}function vt(c,t,a){let{$$slots:n={},$$scope:s}=t,{toggle:o=!1}=t;return c.$$set=l=>{"toggle"in l&&a(0,o=l.toggle),"$$scope"in l&&a(1,s=l.$$scope)},[o,s,n]}class Tt extends nt{constructor(t){super(),st(this,t,vt,bt,at,{toggle:0})}}function wt(c){let t;return{c(){t=w("Hide toggled content")},l(a){t=E(a,"Hide toggled content")},m(a,n){_(a,t,n)},d(a){a&&r(t)}}}function Et(c){let t,a,n,s,o,l,p,i,d,S;return i=new it({props:{$$slots:{default:[wt]},$$scope:{ctx:c}}}),i.$on("click",c[2]),{c(){t=$("article"),a=$("h3"),n=w("Toggled content"),s=P(),o=$("p"),l=w("This is the toggled content."),p=P(),Y(i.$$.fragment)},l(u){t=h(u,"ARTICLE",{});var g=v(t);a=h(g,"H3",{});var k=v(a);n=E(k,"Toggled content"),k.forEach(r),s=B(g),o=h(g,"P",{});var j=v(o);l=E(j,"This is the toggled content."),j.forEach(r),p=B(g),z(i.$$.fragment,g),g.forEach(r)},m(u,g){_(u,t,g),m(t,a),m(a,n),m(t,s),m(t,o),m(o,l),m(t,p),A(i,t,null),S=!0},p(u,g){const k={};g&32&&(k.$$scope={dirty:g,ctx:u}),i.$set(k)},i(u){S||(H(i.$$.fragment,u),mt(()=>{d||(d=J(t,U,{},!0)),d.run(1)}),S=!0)},o(u){C(i.$$.fragment,u),d||(d=J(t,U,{},!1)),d.run(0),S=!1},d(u){u&&r(t),D(i),u&&d&&d.end()}}}function Ht(c){let t=c[0].toggle?"Hide content":"Show content",a;return{c(){a=w(t)},l(n){a=E(n,t)},m(n,s){_(n,a,s)},p(n,s){s&1&&t!==(t=n[0].toggle?"Hide content":"Show content")&&dt(a,t)},d(n){n&&r(a)}}}function St(c){let t,a,n;return a=new it({props:{variant:"primary",$$slots:{default:[Ht]},$$scope:{ctx:c}}}),a.$on("click",c[1]),{c(){t=$("p"),Y(a.$$.fragment),this.h()},l(s){t=h(s,"P",{slot:!0});var o=v(t);z(a.$$.fragment,o),o.forEach(r),this.h()},h(){ct(t,"slot","toggler")},m(s,o){_(s,t,o),A(a,t,null),n=!0},p(s,o){const l={};o&33&&(l.$$scope={dirty:o,ctx:s}),a.$set(l)},i(s){n||(H(a.$$.fragment,s),n=!0)},o(s){C(a.$$.fragment,s),n=!1},d(s){s&&r(t),D(a)}}}function Ct(c){let t,a,n,s,o,l,p,i,d,S,u,g,k,j,q,y,T,I,R,L,rt=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fade <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte/transition'</span>
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button<span class="token punctuation">,</span> Toggle <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>

    <span class="token keyword">let</span> toggle <span class="token operator">=</span> <span class="token boolean">false</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Toggle</span> <span class="token attr-name"><span class="token namespace">bind:</span>toggle</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggler<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> toggle <span class="token operator">=</span> <span class="token operator">!</span>toggle<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
        <span class="token language-javascript"><span class="token punctuation">&#123;</span>toggle <span class="token operator">?</span> <span class="token string">'Hide'</span> <span class="token operator">:</span> <span class="token string">'Show'</span><span class="token punctuation">&#125;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name"><span class="token namespace">transition:</span>fade</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Toggled header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Toggled content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Toggle</span><span class="token punctuation">></span></span></code>`,K;function gt(e){c[3](e)}let N={$$slots:{toggler:[St],default:[Et]},$$scope:{ctx:c}};c[0].toggle!==void 0&&(N.toggle=c[0].toggle),k=new Tt({props:N}),X.push(()=>F(k,"toggle",gt));function ut(e){c[4](e)}let O={config:Pt};return c[0]!==void 0&&(O.state=c[0]),T=new $t({props:O}),X.push(()=>F(T,"state",ut)),{c(){t=$("h1"),a=w(tt),n=P(),s=$("p"),o=w("Toggle is a flexible wrapper which provides just the slots for the content. "),l=$("br"),p=w(`
You can control it with the `),i=$("code"),d=w("toggle: boolean"),S=w(" flag."),u=P(),g=$("p"),Y(k.$$.fragment),q=P(),y=$("p"),Y(T.$$.fragment),R=P(),L=$("pre"),this.h()},l(e){t=h(e,"H1",{});var f=v(t);a=E(f,tt),f.forEach(r),n=B(e),s=h(e,"P",{});var b=v(s);o=E(b,"Toggle is a flexible wrapper which provides just the slots for the content. "),l=h(b,"BR",{}),p=E(b,`
You can control it with the `),i=h(b,"CODE",{});var M=v(i);d=E(M,"toggle: boolean"),M.forEach(r),S=E(b," flag."),b.forEach(r),u=B(e),g=h(e,"P",{});var Q=v(g);z(k.$$.fragment,Q),Q.forEach(r),q=B(e),y=h(e,"P",{});var V=v(y);z(T.$$.fragment,V),V.forEach(r),R=B(e),L=h(e,"PRE",{class:!0});var ft=v(L);ft.forEach(r),this.h()},h(){ct(L,"class","language-sv")},m(e,f){_(e,t,f),m(t,a),_(e,n,f),_(e,s,f),m(s,o),m(s,l),m(s,p),m(s,i),m(i,d),m(s,S),_(e,u,f),_(e,g,f),A(k,g,null),_(e,q,f),_(e,y,f),A(T,y,null),_(e,R,f),_(e,L,f),L.innerHTML=rt,K=!0},p(e,[f]){const b={};f&33&&(b.$$scope={dirty:f,ctx:e}),!j&&f&1&&(j=!0,b.toggle=e[0].toggle,G(()=>j=!1)),k.$set(b);const M={};!I&&f&1&&(I=!0,M.state=e[0],G(()=>I=!1)),T.$set(M)},i(e){K||(H(k.$$.fragment,e),H(T.$$.fragment,e),K=!0)},o(e){C(k.$$.fragment,e),C(T.$$.fragment,e),K=!1},d(e){e&&r(t),e&&r(n),e&&r(s),e&&r(u),e&&r(g),D(k),e&&r(q),e&&r(y),D(T),e&&r(R),e&&r(L)}}}const Lt={file:"toggle.md",title:"Toggle",api:[{title:'<slot name="toggler">: HTMLElement | SvelteComponent',description:"Toggle toggler",variables:"HTMLElement | SvelteComponent"},{title:"<slot>: HTMLElement | SvelteComponent",description:"Toggle content",variables:"HTMLElement | SvelteComponent"},{title:"toggle: boolean = false",description:"Toggle toggle state",variables:"true | false"}],config:{toggle:{type:"checkbox"}}},{file:Kt,title:tt,api:Yt,config:Pt}=Lt;function Bt(c,t,a){let n={toggle:!1};const s=()=>a(0,n.toggle=!n.toggle,n),o=()=>a(0,n.toggle=!1,n);function l(i){c.$$.not_equal(n.toggle,i)&&(n.toggle=i,a(0,n))}function p(i){n=i,a(0,n)}return[n,s,o,l,p]}class zt extends nt{constructor(t){super(),st(this,t,Bt,Ct,at,{})}}export{zt as default,Lt as metadata};
