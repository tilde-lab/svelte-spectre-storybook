import{S as q,i as L,s as C,k as R,q as x,a as I,w as g,l as z,m as b,r as G,h as u,c as E,x as _,n as M,b as k,L as y,y as h,f as v,t as d,z as F,B as H}from"../../../../../chunks/index-3764ed31.js";/* empty css                                                                  */import{I as T}from"../../../../../chunks/IconButton-26a19398.js";import{I as V}from"../../../../../chunks/Icon-9c9504de.js";import{I as B}from"../../../../../chunks/Input-36ee127b.js";import{F as A,G as j}from"../../../../../chunks/Group-9cb6808e.js";function D(c){let n;return{c(){n=x("Success")},l(a){n=G(a,"Success")},m(a,s){k(a,n,s)},d(a){a&&u(n)}}}function J(c){let n,a;return n=new B({props:{validity:"success",$$slots:{default:[D]},$$scope:{ctx:c}}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){h(n,s,p),a=!0},p(s,p){const l={};p&1&&(l.$$scope={dirty:p,ctx:s}),n.$set(l)},i(s){a||(v(n.$$.fragment,s),a=!0)},o(s){d(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function K(c){let n;return{c(){n=x("Error")},l(a){n=G(a,"Error")},m(a,s){k(a,n,s)},d(a){a&&u(n)}}}function N(c){let n,a;return n=new V({props:{slot:"iconRight",icon:"emoji"}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){h(n,s,p),a=!0},p:H,i(s){a||(v(n.$$.fragment,s),a=!0)},o(s){d(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function O(c){let n,a;return n=new B({props:{validity:"error",$$slots:{iconRight:[N],default:[K]},$$scope:{ctx:c}}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){h(n,s,p),a=!0},p(s,p){const l={};p&1&&(l.$$scope={dirty:p,ctx:s}),n.$set(l)},i(s){a||(v(n.$$.fragment,s),a=!0)},o(s){d(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function Q(c){let n;return{c(){n=x("Error")},l(a){n=G(a,"Error")},m(a,s){k(a,n,s)},d(a){a&&u(n)}}}function U(c){let n,a;return n=new T({props:{slot:"iconRight",icon:"emoji"}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){h(n,s,p),a=!0},p:H,i(s){a||(v(n.$$.fragment,s),a=!0)},o(s){d(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function W(c){let n,a;return n=new B({props:{validity:"error",$$slots:{iconRight:[U],default:[Q]},$$scope:{ctx:c}}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){h(n,s,p),a=!0},p(s,p){const l={};p&1&&(l.$$scope={dirty:p,ctx:s}),n.$set(l)},i(s){a||(v(n.$$.fragment,s),a=!0)},o(s){d(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function X(c){let n,a,s,p,l,i,m,$,f;return p=new j({props:{$$slots:{default:[J]},$$scope:{ctx:c}}}),i=new j({props:{$$slots:{default:[O]},$$scope:{ctx:c}}}),$=new j({props:{$$slots:{default:[W]},$$scope:{ctx:c}}}),{c(){n=R("h4"),a=x("Form horizontal"),s=I(),g(p.$$.fragment),l=I(),g(i.$$.fragment),m=I(),g($.$$.fragment)},l(t){n=z(t,"H4",{});var e=b(n);a=G(e,"Form horizontal"),e.forEach(u),s=E(t),_(p.$$.fragment,t),l=E(t),_(i.$$.fragment,t),m=E(t),_($.$$.fragment,t)},m(t,e){k(t,n,e),y(n,a),k(t,s,e),h(p,t,e),k(t,l,e),h(i,t,e),k(t,m,e),h($,t,e),f=!0},p(t,e){const o={};e&1&&(o.$$scope={dirty:e,ctx:t}),p.$set(o);const r={};e&1&&(r.$$scope={dirty:e,ctx:t}),i.$set(r);const w={};e&1&&(w.$$scope={dirty:e,ctx:t}),$.$set(w)},i(t){f||(v(p.$$.fragment,t),v(i.$$.fragment,t),v($.$$.fragment,t),f=!0)},o(t){d(p.$$.fragment,t),d(i.$$.fragment,t),d($.$$.fragment,t),f=!1},d(t){t&&u(n),t&&u(s),F(p,t),t&&u(l),F(i,t),t&&u(m),F($,t)}}}function Y(c){let n,a,s,p,l,i,m,$=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Form<span class="token punctuation">,</span> FormGroup<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> IconButton<span class="token punctuation">,</span> Input<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Form horizontal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">validity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">validity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Error <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconRight<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>emoji<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">validity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Error <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IconButton</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconRight<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>emoji<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span></code>`,f,t,e;return t=new A({props:{horizontal:!0,$$slots:{default:[X]},$$scope:{ctx:c}}}),{c(){n=R("h1"),a=x(S),s=I(),p=R("p"),l=x("Form provides the most common controls, including input, textarea, select, checkbox, radio, and switch, as well as their groups."),i=I(),m=R("pre"),f=I(),g(t.$$.fragment),this.h()},l(o){n=z(o,"H1",{});var r=b(n);a=G(r,S),r.forEach(u),s=E(o),p=z(o,"P",{});var w=b(p);l=G(w,"Form provides the most common controls, including input, textarea, select, checkbox, radio, and switch, as well as their groups."),w.forEach(u),i=E(o),m=z(o,"PRE",{class:!0});var P=b(m);P.forEach(u),f=E(o),_(t.$$.fragment,o),this.h()},h(){M(m,"class","language-sv")},m(o,r){k(o,n,r),y(n,a),k(o,s,r),k(o,p,r),y(p,l),k(o,i,r),k(o,m,r),m.innerHTML=$,k(o,f,r),h(t,o,r),e=!0},p(o,[r]){const w={};r&1&&(w.$$scope={dirty:r,ctx:o}),t.$set(w)},i(o){e||(v(t.$$.fragment,o),e=!0)},o(o){d(t.$$.fragment,o),e=!1},d(o){o&&u(n),o&&u(s),o&&u(p),o&&u(i),o&&u(m),o&&u(f),F(t,o)}}}const Z={file:"form.md",title:"Form",api:[{title:"horizontal: Boolean",description:"component horizon",variables:" true | false"},{title:"validity: Validity",description:"component validator",variables:" success | error"}]},{file:en,title:S,api:cn}=Z;class ln extends q{constructor(n){super(),L(this,n,null,Y,C,{})}}export{ln as default,Z as metadata};
